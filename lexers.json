{
  "tiny_c": {
    "spec": {
      "KEYWORD": "\\b(int|return|if|else|while|for|float|char|void)\\b",
      "IDENTIFIER": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
      "NUMBER": "\\b\\d+(\\.\\d*)?\\b",
      "OPERATOR": "[\\+\\-\\*=<>!]|\\/(?![\\/*])",
      "PUNCTUATION": "[{}();,]",
      "STRING": "\\\".*?\\\"",
      "WHITESPACE": "\\s+",
      "UNKNOWN": "."
    }
  },
  "micropython": {
    "spec": {
      "KEYWORD": "\\b(def|return|if|else|elif|while|for|in|import|as|from|class|try|except|finally|with|yield|lambda)\\b",
      "IDENTIFIER": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
      "NUMBER": "\\b\\d+(\\.\\d*)?\\b",
      "OPERATOR": "[\\+\\-\\*/=<>!%&|^~]",
      "PUNCTUATION": "[{}()\\[\\]:,\\.]",
      "STRING": "(\\\".*?\\\"|\\'.*?\\')",
      "WHITESPACE": "\\s+",
      "UNKNOWN": "."
    }
  },
  "c_minus": {
    "spec": {
      "KEYWORD": "\\b(int|float|void|if|else|while|return)\\b",
      "IDENTIFIER": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
      "NUMBER": "\\b\\d+(\\.\\d*)?\\b",
      "COMMENT": "\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/",
      "OPERATOR": "[\\+\\-\\*=<>!]|\\/(?![\\/*])",
      "PUNCTUATION": "[{}();,]",
      "STRING": "\\\".*?\\\"",
      "WHITESPACE": "\\s+",
      "UNKNOWN": "."
    }
  }
}
